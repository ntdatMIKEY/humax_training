/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a chat_adaptor.h: ..\receiver\chat.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CHAT_ADAPTOR_H
#define CHAT_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface local.Receiver
 */
class ReceiverAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "local.Receiver")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"local.Receiver\">\n"
"    <property access=\"readwrite\" type=\"s\" name=\"message\"/>\n"
"    <signal name=\"messageChanged\"/>\n"
"    <method name=\"receive\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"encoded_image\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ReceiverAdaptor(QObject *parent);
    virtual ~ReceiverAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString message READ message WRITE setMessage)
    QString message() const;
    void setMessage(const QString &value);

public Q_SLOTS: // METHODS
    void receive(const QString &encoded_image);
Q_SIGNALS: // SIGNALS
    void messageChanged();
};

#endif
