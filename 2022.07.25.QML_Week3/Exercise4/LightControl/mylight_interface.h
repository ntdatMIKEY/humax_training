/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p mylight_interface.h: ..\ex4_control\mylight.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MYLIGHT_INTERFACE_H
#define MYLIGHT_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface local.MyLight
 */
class LocalMyLightInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "local.MyLight"; }

public:
    LocalMyLightInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~LocalMyLightInterface();

    Q_PROPERTY(bool isOn READ isOn WRITE setIsOn)
    inline bool isOn() const
    { return qvariant_cast< bool >(property("isOn")); }
    inline void setIsOn(bool value)
    { setProperty("isOn", QVariant::fromValue(value)); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> turnOff()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("turnOff"), argumentList);
    }

    inline QDBusPendingReply<> turnOn()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("turnOn"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void lightChanged();
};

namespace local {
  typedef ::LocalMyLightInterface MyLight;
}
#endif
